
(function(){
  'use strict';
	electionChartsApp.directive('d3Bars',['$window','$timeout','d3Service',function($window,$timeout,d3Service){

        return {
            restrict:'EA',
            scope:{
                data:'='
            },
            link: function(scope,element,attrs){
                d3Service.d3().then(function(d3){
                    var renderTimeout;
                    var margin = parseInt(attrs.margin) || 20,
                        barheight = parseInt(attrs.barHeight) || 20,
                        barPadding = parseInt(attrs.barPadding) || 5;
                    var svg =d3.select(element[0])
                                    .append("svg")
                                    .style('width','100%');

                    $window.onresize = function(){
                        scope.$apply();
                    }


                    scope.$watch(function(){
                        return angular.element($window)[0].innerWidth;
                    },function(){
                        scope.render(scope.data);

                    });

                    scope.$watch('data',function(newVals,oldVals){
                        return scope.render(newVals);
                    },true);

                    scope.render = function(data){
                        svg.selectAll('*').remove();

                        if(!data) return;

                        var width = d3.select(element[0]) .node().offsetWidth - margin,
                            height = scope.data.length * (barheight + barPadding),
                            color = d3.scale.category20(),
                            xScale = d3.scale.linear()
                                .domain([0,d3.max(data,function(d){
                                    return d.score;
                                })])
                                .range([0,width]);
                        svg.attr('height',height);

                        svg.selectAll('rect')
                            .data(data)
                            .enter()
                            .append('rect')
                            .attr('height', barheight)
                            .attr('width', 140)
                            .attr('x', Math.round(margin / 2))
                            .attr('y', function (d, i) {
                                return i * (barheight + barPadding)
                            })
                            .attr('fill', function (d) {
                                return color(d.score);
                            })
                            .transition()
                            .duration(500)
                            .attr('width', function (d) {
                                return xScale(d.score);
                            });
                        svg.selectAll('text')
                            .data(data)
                            .enter()
                            .append('text')
                            .attr('fill','#fff')
                            .attr('y',function(d,i){
                                return i * (barheight + barPadding)+15;
                            })
                            .attr('x',15)
                            .text(function(d){
                                return d.name +"( scored:"+ d.score+")";
                            });

                    }

                });
            }


        };

    }]);

}());
